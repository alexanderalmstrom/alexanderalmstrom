// mixins.scss

@mixin h1 {
  font-size: 5rem;

  @include media(md) {
    font-size: 6rem;
  }

  @include media(lg) {
    font-size: 7rem;
  }
}

@mixin h2 {
  font-size: 4rem;

  @include media(md) {
    font-size: 5rem;
  }

  @include media(lg) {
    font-size: 6rem;
  }
}

@mixin h3 {
  font-size: 3rem;

  @include media(md) {
    font-size: 4rem;
  }

  @include media(lg) {
    font-size: 5rem;
  }
}

@mixin h4 {
  font-size: 2rem;
  letter-spacing: 0;

  @include media(lg) {
    font-size: 2.2rem;
  }

  @include media(md) {
    font-size: 2.4rem;
  }
}

@mixin h5 {
  font-size: 1.6rem;
  letter-spacing: 0;

  @include media(md) {
    font-size: 1.8rem;
  }

  @include media(lg) {
    font-size: 2rem;
  }
}

@mixin h6 {
  font-size: 1.6rem;
  letter-spacing: 0;
}

@mixin media($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-sm - 1) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == 'sm-max' {
    @media (max-width: $breakpoint-sm - 1) {
      @content;
    }
  } @else if $breakpoint == 'md-max' {
    @media (max-width: $breakpoint-md - 1) {
      @content;
    }
  } @else if $breakpoint == 'lg-max' {
    @media (max-width: $breakpoint-lg - 1) {
      @content;
    }
  } @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg";
  }
}

@mixin gutter($gutter: $grid-gutter) {
  padding-left: $gutter;
  padding-right: $gutter;
}

@mixin container($max-width: $grid-width) {
  width: 100%;
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
}

@mixin column($size, $gutter: $grid-gutter) {
  max-width: ($size / $grid-columns) * 100%;
  flex: ($size / $grid-columns) * 100% 0 0;

  @include gutter($grid-gutter);
}

@mixin animate($direction) {
  transition: transform 0.6s, opacity 0.6s;
  opacity: 0;

  @if $direction == 'up' {
    transform: translateY(2rem);
  } @else if $direction == 'down' {
    transform: translateY(-2rem);
  } @else {
    @warn "Animate mixin supports: up, down";
  }
}

@mixin animate-in() {
  transform: translateY(0);
  opacity: 1;
}